<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
	"http://struts.apache.org/dtds/struts-2.5.dtd">
    
<struts>

    <!-- 
       Define new Struts beans that implement key interfaces or extend existing objects.
       
       This is an example of a bean that provides a new ObjectFactory:
    
    <bean type="com.opensymphony.xwork2.ObjectFactory" name="myObjectFactory" class="com.mycompany.myapp.MyObjectFactory" />

       This example adds a new template engine for the Struts UI tags:

    <bean type="org.apache.struts2.components.template.TemplateEngine" name="myEngine" class="com.mycompany.myapp.MyTemplateEngine" />
    
    -->

    <!-- 
       You can also define or override constants to plug in your custom beans into the Struts framework or provide customization
       options for plugin users.

       This is an example of making your new ObjectFactory, defined above, the default ObjectFactory for the framework:

    <constant name="struts.objectFactory" value="myObjectFactory" />

       Or perhaps you want to provide a configuration option for the plugin user.  Define a constant here, then have it injected
       into your bean:

    <constant name="my.configuration.option" value="myValue" />

    -->

    <!--
       Finally, you can define your own interceptors, results, and action packages.

       In this example, we create a package that defines a result: -->

    <package name="myPlugin-default">
        <result-types>
            <result-type name="myResult" class="com.struts_example.MyResult"/>
        </result-types>
    </package>    

    <constant name="struts.devMode" value="true" />

    <package name="default" extends="struts-default" namespace="/">
        <action name="">
            <result>/index.jsp</result>
        </action>
    </package>

<!-- interceptor and action -->
<!-- custom interceptor to throw 403 -->
<!-- struts-json -->
<!-- action : class and method -->

    <package name ="basicstruts2" extends="struts-default"> <!--   namespace="/"> -->
        <interceptors>
            <interceptor class="com.struts_example.LoginMVC.LoginInterceptor" name="loginInterceptor">
            </interceptor>
            <interceptor class="com.struts_example.LoginMVC.addVisitsInterceptor" name="addVisitsInterceptor">
            </interceptor>
            <interceptor-stack name="loginStack">
                <interceptor-ref name="loginInterceptor"/>
                <interceptor-ref name="addVisitsInterceptor"/>
                <interceptor-ref name="defaultStack"/>
            </interceptor-stack>
        </interceptors>
        

        <global-results>
            <result name="login"> login.jsp </result>
            <result name="403"> error403.jsp </result>
        </global-results>

        <action name="index">
            <result>/index.jsp</result>
        </action>              

        <action name="hello" class="com.struts_example.HelloWorldMVC.action.HelloWorldAction" method="execute">    
            <result name="success">/HelloWorld.jsp</result>            
        </action>

        <!-- LOGIN -->
        <action name="loginAction" class="com.struts_example.LoginMVC.action.LoginAction" method="loginRegisterUser">            
            <result name="success" type="redirect"> homeAction.action </result>            
            <result name="login"> /login.jsp</result>
            

        </action>

        <!-- REDIRECT TO HOME -->
        <action name="homeAction" class="com.struts_example.LoginMVC.action.LoginAction" method="home">
            <interceptor-ref name="loginStack" />
            <!-- <interceptor-ref name="addVisitorsInterceptor" /> -->
            <!-- <result name="login"> /login.jsp</result>              -->
            <result name="success" type="redirect"> /home.jsp </result>            
        </action>

        <!-- LOGOUT -->
        <action name="logoutAction" class="com.struts_example.LoginMVC.action.LoginAction" method="logOut">
            <result name="success">/login.jsp</result>
        </action>
    </package>

    
    <package name="json" namespace = "/" extends="json-default">
        <!-- Show Visits data using json -->
        <action name="showVisitsAction" class="com.struts_example.LoginMVC.action.LoginAction" method="showVisits">
            <!-- <interceptor-ref name="addVisitsInterceptor" /> -->
            <result type="json">
                <param name="excludeProperties">
                    pass,
                    <!-- session,
                    uName -->
                </param>
            </result>
        </action>

    </package>
  
    

</struts>
